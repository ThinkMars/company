# CI/CD 流水线配置
name: CI/CD Pipeline

# 触发条件：当 main 分支有推送或 PR，且更改涉及 packages 目录或工作流配置时
on:
  push:
    branches: [main]
    paths:
      - "packages/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main]
    paths:
      - "packages/**"
      - ".github/workflows/**"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install Dependencies
        run: pnpm install
    outputs:
      cache-hit: ${{ steps.cache-dependencies.outputs.cache-hit }}

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [want-chat, manager]
    steps:
      - name: Build
        run: pnpm --filter ${{ matrix.app }} build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-dist
          path: packages/${{ matrix.app }}/dist
          retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [want-chat, manager]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.app }}-dist
          path: packages/${{ matrix.app }}/dist
      - name: Build Docker Image
        run: |
          docker build -t ${{ matrix.app }}:${{ github.sha }} -f packages/${{ matrix.app }}/Dockerfile .
      - name: Login to Docker Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker Image
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ matrix.app }}:${{ github.sha }} ${{ secrets.DOCKER_REGISTRY }}/${{ matrix.app }}:latest
          docker push ${{ secrets.DOCKER_REGISTRY }}/${{ matrix.app }}:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        app: [want-chat, manager]
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ALIYUN_HOST }}
          username: ${{ secrets.ALIYUN_USER }}
          key: ${{ secrets.ALIYUN_SSH_KEY }}
          script: |
            cd /docker/
            docker pull ${{ secrets.DOCKER_REGISTRY }}/${{ matrix.app }}:latest
            docker-compose up -d --force-recreate ${{ matrix.app }}

  # 构建完成后发送通知
  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      # 邮件通知
      - name: Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.126.com # 126 邮箱的 SMTP 服务器地址
          server_port: 465 # 126 邮箱的 SMTP 端口（SSL）
          username: ${{ secrets.EMAIL_USERNAME }} # 126 邮箱地址
          password: ${{ secrets.EMAIL_PASSWORD }} # 126 邮箱的授权码
          subject: "CI/CD Notification: ${{ github.repository }} (${{ needs.build.result }})"
          to: thinkmars@126.com
          from: GitHub Actions
          body: |
            🚦 Status: ${{ needs.build.result }}
            📦 Repo: ${{ github.repository }}
            🌿 Branch: ${{ github.ref_name }}
            💬 Message: ${{ github.event.head_commit.message }}
            🔗 Detail: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
