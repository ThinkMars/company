# .github/workflows/want-chat-ci.yml
name: Want Chat CI/CD

on:
  push:
    branches: [main]
    paths:
      - "packages/want-chat/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD -- packages/want-chat/)
          echo "Changed files: $changed_files"
          echo "::set-output name=files::$changed_files"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            **/node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Build
        if: contains(${{ steps.changed-files.outputs.files }}, 'packages/want-chat/')
        run: pnpm --filter want-chat build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: want-chat-dist
          path: packages/want-chat/dist
          retention-days: 7

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: want-chat-dist
          path: packages/want-chat/dist

      - name: Build Docker Image
        working-directory: packages/want-chat
        run: |
          docker build -t want-chat:${{ github.sha }} .

      - name: Login to Docker Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag want-chat:${{ github.sha }} ${{ secrets.DOCKER_REGISTRY }}/want-chat:latest
          docker push ${{ secrets.DOCKER_REGISTRY }}/want-chat:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ALIYUN_HOST }}
          username: ${{ secrets.ALIYUN_USER }}
          key: ${{ secrets.ALIYUN_SSH_KEY }}
          script: |
            cd /docker/
            if [ ! -f docker-compose.yml ]; then
              echo "docker-compose.yml 不存在！"
              exit 1
            fi
            echo "停止并删除 want-chat 容器..."
            docker-compose stop want-chat && docker-compose rm -f want-chat
            echo "删除未使用的镜像..."
            docker image prune -a -f
            echo "拉取最新的 want-chat 镜像..."
            docker pull ${{ secrets.DOCKER_REGISTRY }}/want-chat:latest
            echo "创建容器启动 want-chat 服务..."
            docker-compose up -d --no-deps want-chat

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: success() || failure()
    steps:
      - name: Notify
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ 部署成功！"
            echo "应用: want-chat"
            echo "镜像: ${{ secrets.DOCKER_REGISTRY }}/want-chat:latest"
          else
            echo "❌ 部署失败！"
            echo "应用: want-chat"
          fi
